FROM alpine:latest as musl
ARG MUSL_VSN='1.2.3'
ARG GPG_FINGERPRINT='8364 8929 0BB6 B70F 99FF  DA05 56BC DB59 3020 450F'
ARG SHA512_SUM='9332f713d3eb7de4369bc0327d99252275ee52abf523ee34b894b24a387f67579787f7c72a46cf652e090cffdb0bc3719a4e7b84dca66890b6a37f12e8ad089c'

RUN apk add --no-cache build-base gnupg
# download musl source code, checksum test and fingerprint validation
RUN wget https://musl.libc.org/releases/musl-$MUSL_VSN.tar.gz
RUN CHECKSUM_STATE=$(echo -n $(echo "${SHA512_SUM}  musl-$MUSL_VSN.tar.gz" | sha512sum -c) | tail -c 2) \
    && if [ "${CHECKSUM_STATE}" != "OK" ]; then echo "Error: checksum does not match" && exit 1; fi
RUN wget https://musl.libc.org/musl.pub \
    && wget https://musl.libc.org/releases/musl-$MUSL_VSN.tar.gz.asc \
    && gpg --import -q musl.pub \
    && FINGERPRINT="$(LANG=C gpg --verify musl-$MUSL_VSN.tar.gz.asc musl-$MUSL_VSN.tar.gz 2>&1 \
        | sed -n "s#Primary key fingerprint: \(.*\)#\1#p")" \
    && if [ -z "${FINGERPRINT}" ]; then echo "Error: invalid GPG signature!" && exit 1; fi \
    && if [ "${FINGERPRINT}" != "${GPG_FINGERPRINT}" ]; then echo "Error: wrong GPG fingerprint" && exit 1; fi
RUN tar -xzf musl-$MUSL_VSN.tar.gz
# build musl libc
WORKDIR /musl-$MUSL_VSN
RUN ./configure \
        --prefix=/rootfs \
        --sysconfdir=/etc \
        --localstatedir=/var \
        --syslibdir=/lib \
    && make -j "$(nproc)"
RUN make install

# use a static busybox - so no compatibility with musl-libc is required
FROM alpine:latest AS busybox
RUN apk add --no-cache busybox-static \
    && mkdir -p /rootfs/bin /rootfs/etc \
    && ln -v /bin/busybox.static /rootfs/bin/busybox \ 
    && chroot rootfs /bin/busybox --install /bin

# extract eturnal tarball and adjust for runtime
FROM alpine:latest AS eturnal
COPY tarballs/* /tmp/

RUN ARCH=$(uname -m | sed -e 's/x86_64/x64/;s/aarch64/arm64/') \
    && tar -xzf /tmp/eturnal-*-linux-musl-$ARCH.tar.gz -C /opt \
    && echo "-setcookie eturnal" >> $(find /opt -name vm.args)

# build together the test image
FROM scratch
ARG HOME=/opt/eturnal
COPY --from=musl /rootfs /
COPY --from=busybox /rootfs /
COPY --from=eturnal --chown=9000:9000 /opt /opt

RUN echo "eturnal:x:9000:9000:eturnal,,,:$HOME:/sbin/nologin" >> /etc/passwd \
    && echo "eturnal:x:9000:eturnal" >> /etc/group \
    && ln -s $HOME/bin/eturnalctl /bin/eturnalctl \
    && ln -s $HOME/bin/stun /bin/stun \
    && ln -s /lib/libc.so /lib/ld-musl-$(uname -m).so.1 \
    && ln -s /lib/ld-musl-$(uname -m).so.1 /bin/ldd

ENV PIPE_DIR=$HOME/run/pipe/
USER eturnal