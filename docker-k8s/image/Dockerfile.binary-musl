# BUILD: Define base image
ARG ALPINE_VSN="3.17"
FROM alpine:${ALPINE_VSN} AS eturnal
# BUILD: define image build arguments
ARG HOME=/opt/eturnal
# BUILD: mount binary tarball
RUN --mount=type=bind,source=tarballs,target=/tarballs \
    set -x && apk -U upgrade --available \
# BUILD: add build dependencies
    && apk add -t build-deps \
        libcap-utils \
# RUNTIME: add/ define runtime packages
    && apk add \
        busybox-binsh \
        libcap2 \
        tini \
# RUNTIME: add runtime user and directories
    && addgroup eturnal -g 9000 \
    && adduser -s /sbin/nologin -D -u 9000 -h $HOME -G eturnal eturnal \
# RUNTIME: install eturnal binary release
    && ARCH=$(uname -m | sed -e 's/x86_64/x64/;s/aarch64/arm64/') \
    && tar -xzf /tarballs/eturnal-*-linux-musl-$ARCH.tar.gz -C /opt \
    && rm -rf $HOME/etc/* \
    && chown -R 9000:9000 $HOME \
    && install -o 9000 -g 9000 -d $HOME/log $HOME/run $HOME/tls \
    && echo "-setcookie eturnal" >> $(find $HOME -name vm.args) \
# RUNTIME: create symbolic links, entrypoint script and minimal configuration file
    && ln -s $HOME/bin/eturnalctl /usr/local/bin/eturnalctl \
    && ln -s $HOME/bin/stun /usr/local/bin/stun \
    && echo -e \
        '#!/bin/sh \
        \nif [ "$STUN_SERVICE" != "false" ] \
        \nthen \
        \n  export ETURNAL_RELAY_IPV4_ADDR=${ETURNAL_RELAY_IPV4_ADDR-$(stun -4 $STUN_SERVICE)} \
        \n  export ETURNAL_RELAY_IPV6_ADDR=${ETURNAL_RELAY_IPV6_ADDR-$(stun -6 $STUN_SERVICE)} \
        \nfi \
        \nexec "$@"' > /usr/local/bin/run.sh \
    && chmod +x /usr/local/bin/run.sh \
    && echo -e \
        "# A more detailed, commented example configuration can be found here: \
        \n# https://github.com/processone/eturnal/blob/master/config/eturnal.yml \
        \neturnal: \
        \n  log_dir: stdout \
        \n  modules: \
        \n    mod_log_stun: {}" > $HOME/etc/eturnal.yml \
# RUNTIME: set CAPS for binding to privileged ports
    && setcap 'cap_net_bind_service=+ep' $(find $HOME -name beam.smp) \
# CLEANUP: remove build dependencies, apk package manager and source files
    && apk del --repositories-file /dev/null \
        alpine-baselayout \
        alpine-keys \
        apk-tools \
        build-deps \
        libc-utils \
    && rm -rf $BUILD_DIR /var/cache/apk /etc/apk /tmp \
    && find /lib/apk/db -type f -not -name 'installed' -delete

FROM scratch
# BUILD: define image build arguments
ARG HOME=/opt/eturnal
# RUNTIME: define container runtime environment variables
ENV ERL_DIST_PORT=3470 \
    PIPE_DIR=$HOME/run/pipe/ \
    STUN_SERVICE="stun.conversations.im 3478"

COPY --from=eturnal / /

# RUNTIME: define container runtime parameters
WORKDIR $HOME
USER eturnal
VOLUME ["$HOME"]
EXPOSE 3478 3478/udp
ENTRYPOINT ["/sbin/tini","--","run.sh"]
CMD ["eturnalctl", "foreground"]
